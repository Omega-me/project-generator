{{~ for using in usings ~}}
{{using}}
{{~ end ~}}

namespace {{namespacetext}}
public class {{name}} : ResultFilterAttribute
{
    public override void OnResultExecuting(ResultExecutingContext context)
    {
        if (!context.ModelState.IsValid)
        {
            var errors = context.ModelState.Values.Where(v => v.Errors.Count > 0)
                .SelectMany(v => v.Errors)
                .Select(v => new BaseError{ ErrorMessage = v.ErrorMessage})
                .ToList();

            var response = new {{entity}}Response()
            {
                //Add other response fields here 
                Results = null,
                Success = false,
                Errors = errors,
                StatusCode = StatusCodes.Status400BadRequest,
                Count = 0
            };
            
            context.Result = new JsonResult(response)
            {
                StatusCode = 400
            };
        }
        base.OnResultExecuting(context);
    }
}