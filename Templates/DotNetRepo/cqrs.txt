//This file is autogenerated by toolkit
{{~ if type=="class" ~}}
using {{folder}}.Infrastructure.DatabaseManager.Context;
using {{folder}}.Application.Contracts.RepositoryManager.{{if name=="Query"}}Query{{else}}Command{{end}};
{{~ end ~}}

namespace {{namespacetext}}
public {{type}} {{name}} : {{if type=="interface"}}IDisposable{{else}}I{{name}}{{end}}
{
    {{~ if type=="class" ~}}
    private readonly DatabaseContext _context;
    {{~ for using in usings ~}}
    I{{using}}{{if name=="Query"}}Query{{else}}Command{{end}} _{{using}} { get;set; }
    {{~ end ~}}
    public {{name}}(DatabaseContext context) {
        _context = context;
    }
    {{~ for using in usings ~}}
    public I{{using}}{{if name=="Query"}}Query{{else}}Command{{end}} {{using}} => _{{using}} ??= new {{using}}{{if name=="Query"}}Query{{else}}Command{{end}}(_context);
    {{~ end ~}}
     
     public void Dispose() {
        _context.Dispose();
        GC.SuppressFinalize(this);
    }
    public async Task Save() {
        await _context.SaveChangesAsync();
    }
    {{~ else ~}}
    {{~ for using in usings ~}}
    I{{using}}{{if name=="IQuery"}}Query{{else}}Command{{end}} {{using}} { get; }
    {{~ end ~}}
    Task Save();
    {{~ end ~}}
}